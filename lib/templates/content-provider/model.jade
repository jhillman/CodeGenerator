mixin member(member)
 |     private #{member.type} m#{camelCase(capitalize(member.name))}; 
 | 

mixin setter(member)
 |     public void set#{camelCase(capitalize(member.name))}(#{member.type} #{camelCase(member.name)}) {
 |         m#{camelCase(capitalize(member.name))} = #{camelCase(member.name)};
 |         mValues.put(
 +getTableValue(member)
 | , #{camelCase(member.name)});
 |     }
 | 

mixin getter(member)
 |     public #{member.type} get#{camelCase(capitalize(member.name))}() {
 |         return m#{camelCase(capitalize(member.name))};
 |     }
 | 

mixin getTableValue(member)
 | #{capitalize(name)}Table.#{upperCase(member.name)}

mixin getTableValueWithPrefix(member)
 | prefix + #{capitalize(name)}Table.#{upperCase(member.name)}

mixin setContentValues(member)
 - if (member.type === 'boolean')
  |        set#{camelCase(capitalize(member.name))}(cursor.isNull(cursor.getColumnIndex(
  +getTableValueWithPrefix(member)
  | )) ? false : cursor.getInt(cursor.getColumnIndex(
  +getTableValueWithPrefix(member)
  | )) != 0); 
  | 
 - else
  |        set#{camelCase(capitalize(member.name))}(cursor.get#{capitalize(member.type)}(cursor.getColumnIndex(
  +getTableValueWithPrefix(member)
  | ))); 
  | 

| package #{packageName}.model;
| 
| import android.content.ContentValues;
| import android.database.Cursor;
| import #{packageName}.database.table.#{name}Table;
| 
| import java.util.ArrayList;
| import java.util.List;
| 
| public class #{name} {
|     private long mRowId;
| 
each member in members
  +member(member)
| 
|     private ContentValues mValues = new ContentValues();
| 
|     public #{name}() {}
| 
|     public #{name}(final Cursor cursor) {
|         this(cursor, false);
|     }
| 
|     public #{name}(final Cursor cursor, boolean prependTableName) {
|         String prefix = prependTableName ? #{name}Table.TABLE_NAME + "_" : "";

|         setRowId(cursor.getLong(cursor.getColumnIndex(prefix + #{name}Table._ID)));
| 
each member in members
  +setContentValues(member)
|    }
| 
|     public void setRowId(long _id) {
|         mRowId = _id;
|         mValues.put(#{name}Table._ID, _id);
|     }
| 
each member in members
  +setter(member)
|  
|     public long getRowId() {
|         return mRowId;
|     }
| 
each member in members
  +getter(member)
|   
|     public ContentValues getContentValues() {
|         return mValues;
|     }
|   
|     public static List<#{name}> listFromCursor(Cursor cursor) {
|         List<#{name}> list = new ArrayList<#{name}>();
| 
|         if (cursor != null && cursor.moveToFirst()) {
|             do {
|                 list.add(new #{name}(cursor));
|             } while (cursor.moveToNext());
|         }
| 
|         return list;
|     }
|}