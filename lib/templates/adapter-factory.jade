mixin nothing()
 | nothing
 | 
| package #{packageName}.model;
| 
| import com.google.gson.Gson;
| import com.google.gson.TypeAdapterFactory;
| import com.google.gson.TypeAdapter;
| import com.google.gson.reflect.TypeToken;
| import java.lang.SuppressWarnings;
| 
| public final class ModelAdapterFactory {
|     public static TypeAdapterFactory create() {
|         return new TypeAdapterFactory() {
|             @SuppressWarnings("unchecked")
|             public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
|                 Class<T> rawType = (Class<T>) type.getRawType();
| 
each model, i in models
  if (model.gson)
    |                 !{i == 0 ? 'if' : '} else if'} (#{packageName}.model.#{model.package}.#{model.name}.class.isAssignableFrom(rawType)) {
    |                     return (TypeAdapter<T>) new #{packageName}.model.#{model.package}.#{model.name}.GsonTypeAdapter(gson);
| 
|                 } else {
|                     return null;
|                 }
|             }
|         };
|     }
| }
